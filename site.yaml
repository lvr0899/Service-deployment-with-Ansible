---

- hosts: webservers

  become: yes

  tasks:
 
  - name: Installing nginx web server on devA, B & C

    apt:

      name: nginx

      state: present

      update_cache: true
    notify:
    - start nginx

 

  - name: Installing php7.4-fpm on devA, B & C

    apt:

      name: php7.4-fpm

      state: present

      update_cache: true

    notify:

    - start php7.4-fpm

  

  
  - name: Setting up nginx.conf 
    template:
       src: "./Nginx.conf"
       dest: "/etc/nginx/nginx.conf"
    notify:
    - restart php7.4-fpm
    - restart nginx



  - name: Delete default
    file:
       path: "/etc/nginx/sites-enabled/default"
       state: absent
    notify: 
    - restart nginx

  - name: Setting up Nginx
    template:
       src: "./default"
       dest: "/etc/nginx/sites-available/default1"

  - name: Linking default 
    file:
       src: "/etc/nginx/sites-available/default1"
       dest: "/etc/nginx/sites-enabled/default1"
       state: link
    notify: 
    - restart nginx
   

  - name: Setting Up index.php
    template:
      src: "./index.php"
      dest: "/var/www/html/index.php"
    notify:
    - restart nginx
    - start nginx
    - restart php7.4-fpm
    - start php7.4-fpm 
  
 


  handlers:

  - name: start php7.4-fpm
    service:

      name: php7.4-fpm

      state: started



  - name: start nginx
    service:

      name: nginx

      state: started


  - name: restart php7.4-fpm
    service:

      name: php7.4-fpm

      state: restarted
  - name: restart nginx

    service:

      name: nginx

      state: restarted
      
 
- hosts: haproxy
  
  become: yes
  
  tasks:
   
    - name: Installing load balancer
      apt:
        pkg: haproxy
        state: present
        update_cache: yes

    - name: Pushes configuration
      template:
        src: ./haproxy.cfg.j2
        dest: /etc/haproxy/haproxy.cfg
        mode: 0640
        owner: root
        group: root
      notify:
        - restart haproxy

    - name: Setting up default
      lineinfile:
        dest: /etc/default/haproxy
        regexp: "^ENABLED"
        line: "ENABLED=1"
      notify:
        - restart haproxy

  handlers:
    - name: restart haproxy
      service:
        name: haproxy
        state: restarted

- hosts: webservers
  gather_facts: y
  
  tasks:
  
  - name: restart nginx
    service:
       name: nginx
       state: restarted
    become: yes
  - name: haproxy redumentary function test 
    uri: url=http://localhost/ return_content=yes
    register: html_body
  - debug: msg='{{ html_body.content }}'
